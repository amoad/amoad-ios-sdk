:Version: 3.9.7
:toc: macro
:toc-title: 目次
:toclevels: 4

= インストールガイド AMoAd SDK {version} for iOS

toc::[]

:numbered:
:sectnums:

== 概要
SDKの導入方法につきましてXcode7.0を前提に説明いたします。

== 対応環境

=== デバイス

[options="header"]
|===
|デバイス |モデル
|iPhone |iPhone 4/4S/4s、iPhone 5/5s/5c、iPhone 6/6 Plus、iPhone 6s/6s Plus
|iPad |iPad 2、iPad 3rd/4th、iPad Air、iPad Air 2、iPad mini、iPad mini 2/3/4
|iPod touch |第4世代以降
|===

=== OSバージョン

iOS 6.x、7.x、8.x、9.0 〜 9.0.1

== プロジェクト設定
=== AMoAd SDKの追加

AMoAd SDKを追加する方法としてStatic Library(.aファイル)で追加する方法とDynamic Frameworkで追加する方法があります。

==== Static Library(.aファイル)で追加する方法。

. Project Navigatorを開き、Modulesフォルダ以下のファイルをすべてドラッグ＆ドロップします。libAMoAd.aは、TargetのLinked Frameworks and Librariesに自動的に追加されます。

image:Images/SDK01.png[
"AMoAd SDKの追加", width=90%]

TIP: 自動的に追加されなかった場合は＋ボタンから手動で追加してください。


==== Dynamic Frameworkで追加する方法

ライブラリ管理ツール Carthage を使用してFrameworkを追加します。 +

TIP: Carthageを導入するにはgithubのreleasesからCarthage.pkgをダウンロードしてインストールしてください。 +
https://github.com/Carthage/Carthage/releases

. XCodeプロジェクト(.xcodeproj)があるディレクトリ上で
Cartfileを作成したのちcarthage update をしてください。 +
実行すると　./Carthage/Build/iOS/AMoAdSDK.framework が作成されます。

+
[source,bash]
$ cat Cartfile
github “amoad/amoad-ios-sdk”
$ carthage update
+

. ./Carthage/Build/iOS/AMoAdSDK.framework をプロジェクトに追加します。 +
image:Images/Framework01.png[
"AMoAdフレームワークの追加", width=50%]

. Build PhasesのRunScriptに以下を記述します。 +
 .. RunScriptの記述欄に以下を記述 +
+
----
/usr/local/bin/carthage copy-frameworks
----

 .. Input Files に以下を記述
+
----
$(SRCROOT)/Carthage/Build/iOS/AMoAdSDK.framework
----
image:Images/Framework02.png[
"AMoAdフレームワークの追加", width=80%]





=== 関連フレームワークの追加

. TargetのLinked Frameworks and Librariesに、＋ボタンで以下のライブラリを追加します。

[options="header"]
|===
|Name |Status
|AdSupport.framework |Required
|ImageIO.framework |Required
|StoreKit.framework |Required
|===

image:Images/FW01.png[
"関連フレームワークの追加", width=90%]

TIP: Xcode 4の場合は、Quartzcore.frameworkも追加する必要があります。

=== リンクオプションの追加

. TargetのBuild Settingsタブを開き、LinkingカテゴリのOther Linker Flagsに「-ObjC」を設定します。

image:Images/LN01.png[
"リンクオプションの追加", width=90%]

=== ATS (App Transport Security) を抑制する
iOS 9以降では、HTTPリクエストが強制的にHTTPSへ変換されます。
以下にそれを防ぐ方法を記します。アプリの実装に合わせて、以下のいずれかの方法を選択してください。

==== ドメイン名を指定してATSを無効にする
アプリでATSの機能を利用している、想定外のHTTPリクエストを防ぐなどの理由で、基本はATSを有効にしておきたいとき、AMoAdへのリクエストのみをATS対象外とすることができます。

.info.plist
image:Images/iOS9_ATS_SDK_Settings.png[
"ドメイン名を指定してATSを無効にする", width=90%]

.info.plist (ソースコード表示)
[source,xml]
----
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <!-- 省略 -->
  <key>NSAppTransportSecurity</key>
  <dict>
    <key>NSExceptionDomains</key>
    <dict>
      <key>amoad.com</key>
      <dict>
        <key>NSIncludesSubdomains</key>
        <true/>
        <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>
        <true/>
      </dict>
    </dict>
  </dict>
</dict>
</plist>
----

#### 全てのATSを無効にする
アプリでATSを利用しておらず、iOS 9より前と同じく動作させたい場合、全てのATSを無効にすることができます。

.info.plist
image:Images/iOS9_ATS_Arbitrary.png[
"全てのATSを無効にする", width=90%]

.info.plist (ソースコード表示)
[source,xml]
----
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <!-- 省略 -->
  <key>NSAppTransportSecurity</key>
  <dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
  </dict>
</dict>
</plist>
----
